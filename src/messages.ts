import { ActionsContext } from "@context/actions.context";
import { MessagesContext } from "@context/message.context";
import { injectable } from "inversify";
import { Markup } from "telegraf";

export const enum Answers {
  NO = -1,
  YES = 1
}

@injectable()
export class Messages {
  public async replyWithEnterFullName(ctx: MessagesContext): Promise<void> {
    await ctx.reply(`–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"`, Markup.removeKeyboard());

  }

  public async replyWithEnterPhoneNumber(ctx: MessagesContext): Promise<void> {
    await ctx.reply(`–°–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: +79999999999 –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"`,
      Markup.removeKeyboard()
    );
  }

  public async replyWithUserGreetingMessage(ctx: MessagesContext): Promise<void> {
    await ctx.reply(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –≤ –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏!

–ó–∞ —Å—á—ë—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—ã—Ö –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –º—ã —Å–º–æ–∂–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è 39 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞ ISO 21500. 

–¢–µ—Å—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 85 –≤–æ–ø—Ä–æ—Å–æ–≤.  
–í–æ–ø—Ä–æ—Å—ã —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –ø—Ä–µ–¥–º–µ—Ç–Ω—ã–º –æ–±–ª–∞—Å—Ç—è–º –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ - –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è –±—É–¥—É—Ç —É–∫–∞–∑–∞–Ω—ã –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º. 
–û—Ç –≤–∞—Å –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –æ—Ç–≤–µ—Ç–æ–º ¬´–î–∞¬ª –∏–ª–∏ ¬´–ù–µ—Ç¬ª. –ú–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤—ã –≤ —Ä–∞–±–æ—Ç–µ, –≤—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è, –≥–ª–∞–≤–Ω–æ–µ - —É–ª–æ–∂–∏—Ç—å—Å—è –≤ –æ–±—â–µ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è`, {
      parse_mode: "HTML", reply_markup: Markup.inlineKeyboard([
        [
          Markup.button.callback("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", `start_survey`),
        ],
      ]).reply_markup,
    });
  }

  public async replyWithSurveyButtons(ctx: ActionsContext, question: string): Promise<void> {
    await ctx.reply(question, {
      reply_markup: Markup.inlineKeyboard(
        [
          Markup.button.callback("–î–∞", `{"answer":${Answers.YES}}`),
          Markup.button.callback("–ù–µ—Ç", `{"answer":${Answers.NO}}`),
        ]).reply_markup,
      parse_mode: "HTML",
    });
  }

  public async replyWithClosingMessage(ctx: ActionsContext): Promise<void> {
    await ctx.reply(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —Ç–µ—Å—Ç–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å üò©
–ù–û, –ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏ –≤ —Ç–æ–º, —á—Ç–æ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ–≤–ª–∏—è—é—Ç –Ω–∞ —Å–æ—Å—Ç–∞–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏ —ç—Ç–∞–ø–æ–≤ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –∞ —Ç–∞–∫–∂–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. 

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É ‚úä`, {
      parse_mode: "HTML",
    });
  }
}